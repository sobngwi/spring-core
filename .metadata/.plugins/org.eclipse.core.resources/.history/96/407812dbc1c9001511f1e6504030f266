package com.sobngwi.entities;

import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.number.BigDecimalCloseTo.closeTo;
import static org.junit.Assert.assertThat;
import static org.junit.Assert.fail;

import java.math.BigDecimal;
import java.util.List;

import org.junit.Test;

public class AccountRepositoryTest extends GameTest{



	@Test
	public void testGetAccounts() {
		List<Account> accounts = repository.getAccounts() ;
		
		assertThat(accounts.size(), is(3));
	}

	@Test
	public void testGetAccount() {
		Account account = repository.getAccount(1L);
		
		assertThat( account.getId(), is(1L));
		assertThat(new BigDecimal("100.0"),
				is(closeTo(account.getBalance(), new BigDecimal("0.01")))) ;
	}

	@Test
	public void testGetNumberOfAccounts() {
		assertThat( repository.getNumberOfAccounts(), is(3));
	}

	@Test
	public void testCreateAccount() {
		Long id = repository.createAccount(new BigDecimal("250.05"));
		Account account = repository.getAccount(id);
		
		assertThat(account.getId(), is(id));
		assertThat(account.getBalance(),
				is(closeTo(account.getBalance(), new BigDecimal("0.01")))) ;
	}

	@Test
	public void testDeleteAccount() {
		fail("Not yet implemented");
	}

	@Test
	public void testUpdateAccount() {
		Account account = repository.getAccount(1L);
		BigDecimal currentAccountBalance = account.getBalance();
		
	}

}
